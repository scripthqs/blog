import{_ as a,o as s,c as n,f as t}from"./app-007a9be1.js";const e={},p=t(`<h1 id="插槽" tabindex="-1"><a class="header-anchor" href="#插槽" aria-hidden="true">#</a> 插槽</h1><h2 id="插槽的简介" tabindex="-1"><a class="header-anchor" href="#插槽的简介" aria-hidden="true">#</a> 插槽的简介</h2><p><strong>插槽（Slot）<strong>是 vue 为</strong>组件的封装者</strong>提供的能力。允许开发者在封装组件时，把<strong>不确定的、希望由用户指定的 部分</strong>定义为插槽。</p><p>可以把插槽认为是组件封装期间，为用户预留的<strong>内容的占位符</strong></p><h2 id="插槽的基础用法" tabindex="-1"><a class="header-anchor" href="#插槽的基础用法" aria-hidden="true">#</a> 插槽的基础用法</h2><p>在封装组件时，可以通过 <code>&lt;slot&gt;</code>元素<strong>定义插槽</strong>，从而为用<strong>户预留内容占位符</strong>。</p><p>如果在封装组件时<strong>没有预留任何 <code>&lt;slot&gt;</code> 插槽</strong>，则用户提供的任何<strong>自定义内容</strong>都<strong>会被丢弃</strong>。</p><p>在子组件中定义：</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="插槽-name-名称" tabindex="-1"><a class="header-anchor" href="#插槽-name-名称" aria-hidden="true">#</a> 插槽 name 名称</h2><ul><li>每一个 slot 插槽，都有一个 name 名称</li><li>如果省略了 slot 的 name 属性，则有一个<strong>默认名称叫做 default</strong></li></ul><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>default<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>默认情况下，在使用组件的时候，提供的内容都会被填充到名字为 default 的插槽中。</p><p>如果要使用指定 name 的插槽则需要使用具名插槽</p><h2 id="后备内容" tabindex="-1"><a class="header-anchor" href="#后备内容" aria-hidden="true">#</a> 后备内容</h2><p>封装组件时，可以为预留的 插槽提供<strong>后备内容（默认内容）</strong>。如果组件的使用者没有为插槽提供任何 内容，则后备内容会生效</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>default<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>我是默认内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="具名插槽" tabindex="-1"><a class="header-anchor" href="#具名插槽" aria-hidden="true">#</a> 具名插槽</h2><p>如果在封装组件时<strong>需要预留多个插槽节点</strong>，则需要为每个插槽指定<strong>具体的 name 名称</strong>。这种带有具体名称的插槽叫做“具名插槽”</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>slot name<span class="token operator">=</span><span class="token string">&quot;header&quot;</span><span class="token operator">&gt;</span>我是默认内容<span class="token operator">&lt;</span><span class="token operator">/</span>slot<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>slot name<span class="token operator">=</span><span class="token string">&quot;footer&quot;</span><span class="token operator">&gt;</span>我是默认内容<span class="token operator">&lt;</span><span class="token operator">/</span>slot<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>在向具名插槽提供内容的时候，<strong>必须在</strong>一个 **<code>&lt;template&gt;</code><strong>元素上使用</strong><code>v-slot:</code><strong>指令，并以</strong>v-slot:**的参数形式提供其名称</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name"><span class="token namespace">v-slot:</span>default</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>我是组件里的p标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name"><span class="token namespace">v-slot:</span>header</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>我是组件里的p标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!-- 语法糖形式 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#header</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>我是组件里的p标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>**<code>&lt;template&gt;</code>**元素只起包裹的作用。</li><li>**v-slot:**的简写是<code>#</code></li></ul><h2 id="作用域插槽" tabindex="-1"><a class="header-anchor" href="#作用域插槽" aria-hidden="true">#</a> 作用域插槽</h2><p>在封装组件的过程中，可以为预留的 插槽绑定 props 数据，这种<strong>带有 props 数据的 叫做“作用域插槽”</strong>。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>slot name<span class="token operator">=</span><span class="token string">&quot;header&quot;</span> msg<span class="token operator">=</span><span class="token string">&quot;hello world&quot;</span><span class="token operator">&gt;</span>
  我是默认内容header
<span class="token operator">&lt;</span><span class="token operator">/</span>slot<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在封装组件时，为预留的<code>&lt;slot&gt;</code>提供属性对应的值，这个用法，叫做作用域插槽。</p><p>可以使用 <strong>v-slot:</strong> 的形式，接收作用域插槽对外提供的数据</p><p><strong><code>scope</code>是一个形参，但最好都用 scope</strong></p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#header</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>scope<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  {{ scope }}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="解构插槽-prop" tabindex="-1"><a class="header-anchor" href="#解构插槽-prop" aria-hidden="true">#</a> 解构插槽 Prop</h2><p>作用域插槽对外提供的数据对象，可以使用<strong>解构赋值</strong>简化数据的接收过程</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#header</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{user}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  {{ user.id }}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,33),o=[p];function l(c,i){return s(),n("div",null,o)}const r=a(e,[["render",l],["__file","14_vue_slot.html.vue"]]);export{r as default};
