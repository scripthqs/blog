import{_ as e,o as i,c as l,f as a}from"./app-007a9be1.js";const t={},r=a('<h1 id="面试" tabindex="-1"><a class="header-anchor" href="#面试" aria-hidden="true">#</a> 面试</h1><h2 id="自我介绍" tabindex="-1"><a class="header-anchor" href="#自我介绍" aria-hidden="true">#</a> 自我介绍</h2><p>你好，我叫黄前胜，目前做了 4 年前端，毕业于重庆交通大学，普通本科，最近使用的技术栈主要是 vue2/3,还有 electron,react 之前自己也学会，写过一些示例，最近是做了一个制造运营管理系统，包括 web 端和 electron 客户端。还有一个低代码平台，可视化项目。再之前还做过 ssr 服务端渲染的项目。</p><ul><li>从头到尾：从基建到后期优化都有参与</li></ul><p>制造运营管理系统：web 端：权限菜单管理、业务基础数据、工单、产品配置、工艺路线等等业务。客户端：流水线，过站扫码、称重、包装、组装、打标。这个系统就是给国内外各个工厂去使用，包括重庆、南昌、深圳、印度、土耳其等国内外多个工厂。</p><h2 id="八股文" tabindex="-1"><a class="header-anchor" href="#八股文" aria-hidden="true">#</a> 八股文</h2><ul><li>css 常见布局 flex 自适应（百分比+flex vh/vw） rem px em 单位</li><li>输入 url 到看到整个页面，http http2 https</li><li>promise 微任务宏任务</li><li>原型链 作用域 精度问题</li></ul><h2 id="框架工具" tabindex="-1"><a class="header-anchor" href="#框架工具" aria-hidden="true">#</a> 框架工具</h2><ul><li>vue 响应式、diff 算法、虚拟 dom，vue 依赖收集</li><li>watch computed nextTick vue2/vue3 v-if/v-show v-if/v-for</li><li>webpack plugin loader vite</li><li>react</li></ul><h2 id="项目" tabindex="-1"><a class="header-anchor" href="#项目" aria-hidden="true">#</a> 项目</h2><ul><li>webpack +vite 打包</li><li>vxe-table 动态表单 水印 el-select 多个 tag 才省略</li><li>vue hooks</li><li>echarts 动画 响应式布局</li><li>ai 翻译、客户、iframe 事件通信 postMessage、eval 函数执行代码字符串</li><li>ssr nuxt3 svg 动画 过渡 seo 语义化</li><li>微前端 monorepo</li><li>uniapp</li><li>代码规范 css bem 块元素修饰符 样式 vue watch 函数入参 try catch</li></ul><p>处理第三方库组件没有提供的效果</p><ol><li>css 控制视觉显影效果，虚伪达成</li><li>js 回归原始的 dom 操作</li></ol><p>React 在 props 或 state 发生改变时，会调用 React 的 render 方法，会创建一棵不同的树。造成父组件 state 数据一遍，子组件就更新。</p><ul><li>React 需要基于这两个不同的树之间的差别来判断如何有效的更新 UI</li><li>React 进入了 diff 算法来优化</li><li>vue 源码自动依赖收集</li><li>react 需要使用 React.memo 包装组件</li><li>父组件传递给子组件的方法用 useCallback 包装一下</li><li>useState == vue 直接改</li><li>useEffect == vue 生命周期（依赖数组为空） == vue 的 watch（依赖数组有值）</li><li>useMemo == vue computed</li><li>useRef 获取 ref ,也可以保存一些不会引入组件渲染的数据</li></ul>',15),s=[r];function c(h,u){return i(),l("div",null,s)}const d=e(t,[["render",c],["__file","resume.html.vue"]]);export{d as default};
