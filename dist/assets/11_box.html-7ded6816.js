import{_ as e,r as t,o as p,c as o,b as n,e as s,d as i,f as c}from"./app-06f72143.js";const l={},d=c(`<h1 id="盒模型" tabindex="-1"><a class="header-anchor" href="#盒模型" aria-hidden="true">#</a> 盒模型</h1><h2 id="盒模型简介" tabindex="-1"><a class="header-anchor" href="#盒模型简介" aria-hidden="true">#</a> 盒模型简介</h2><p>盒模型（box model），无论是 div、span、a 都是盒模型。图片和表单看作文本，并不是盒子。</p><h2 id="盒模型组成" tabindex="-1"><a class="header-anchor" href="#盒模型组成" aria-hidden="true">#</a> 盒模型组成</h2><p>盒模型由边框(border)、外边距(margin)、内边距(padding)和内容(content)四个部分组成。</p><ul><li><strong>标准盒子模型</strong>中，width 和 height 指的是<strong>内容区域 content</strong> 的宽度和高度。</li><li><strong>IE 盒子模型</strong>（怪异盒模型）中，width 和 height 指的是<strong>内容区域 content + border + padding</strong>的宽度和高度。</li></ul><p>通俗来讲，使用 IE 盒模型，设置宽高就是直接设置可见框大小。使用 IE 盒模型开发比较方便。</p><h2 id="box-sizing" tabindex="-1"><a class="header-anchor" href="#box-sizing" aria-hidden="true">#</a> box-sizing</h2><p>默认情况下，盒子可见框的大小由内容区、内边距和边框共同决定。</p><p><code>box-sizing</code>属性可以设置盒子尺寸的计算方式，属性值：</p><ul><li><code>content-box</code>：默认值，<code>width</code>和<code>height</code>用来设置内区的大小。</li><li><code>border-box</code>：<code>width</code>和<code>height</code>是设置盒子可见框的大小，即设置的是内容区、内边距和边框的和。</li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
  <span class="token property">box-sizing</span><span class="token punctuation">:</span> content-box<span class="token punctuation">;</span> <span class="token comment">/*默认值，width和height用来设置内容区content的大小*/</span>
  <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span> <span class="token comment">/*将盒模型设置为IE盒模型，width和height用来设置内容区content+padding+border和的大小*/</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="border" tabindex="-1"><a class="header-anchor" href="#border" aria-hidden="true">#</a> border</h2><p>border 边框属性可以设置元素的<strong>边框</strong>，border 由 3 部分组成：<strong>边框宽度</strong>、<strong>边框样式</strong>、<strong>边框颜色</strong>。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">border-width</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span> <span class="token comment">/*边框粗细，单位px*/</span>
<span class="token property">border-style</span><span class="token punctuation">:</span> solid<span class="token punctuation">;</span> <span class="token comment">/*样式，属性值有solid（实线）、dotted（点状虚线）、dashed（虚线）、double（双线）*/</span>
<span class="token property">border-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span> <span class="token comment">/*边框颜色*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>边框可以指定上下左右：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>border-top-width/color/<span class="token property">style</span><span class="token punctuation">:</span> <span class="token punctuation">;</span> <span class="token comment">/*上边框*/</span>
border-right-width/color/<span class="token property">style</span><span class="token punctuation">:</span> <span class="token punctuation">;</span> <span class="token comment">/*右边框*/</span>
border-bottom-width/color/<span class="token property">style</span><span class="token punctuation">:</span> <span class="token punctuation">;</span> <span class="token comment">/*下边框*/</span>
border-left-width/color/<span class="token property">style</span><span class="token punctuation">:</span> <span class="token punctuation">;</span> <span class="token comment">/*左边框*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>border 边框属性的简写：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">border</span><span class="token punctuation">:</span> 1px solid red <span class="token comment">/*没有顺序要求*/</span>
<span class="token property">border-top</span><span class="token punctuation">:</span> 1px double #f00<span class="token punctuation">;</span>
<span class="token property">border-left</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token comment">/*取消左边框*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>表格细线边框：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">table,td,th</span> <span class="token punctuation">{</span>
  border； 1px solid red<span class="token punctuation">;</span>
  <span class="token property">border-collapse</span><span class="token punctuation">:</span> collapse<span class="token punctuation">;</span><span class="token comment">/*合并表格相邻的边框*/</span>
  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token comment">/*表格内容居中*/</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>利用 border 属性画一个三角形（小技巧）</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/*直接三角形*/</span>
<span class="token selector">div</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>
  <span class="token property">border</span><span class="token punctuation">:</span> 30px solid transparent<span class="token punctuation">;</span>
  <span class="token property">border-top-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
  <span class="token property">border-bottom</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">/*等边三角形*/</span>
<span class="token selector">div</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
  <span class="token property">border-top</span><span class="token punctuation">:</span> 30px solid red<span class="token punctuation">;</span>
  <span class="token property">border-left</span><span class="token punctuation">:</span> 20px solid transparent<span class="token punctuation">;</span>
  <span class="token property">border-right</span><span class="token punctuation">:</span> 20px solid transparent<span class="token punctuation">;</span>
  <span class="token comment">/* border-radius: 20px; */</span> <span class="token comment">/*扇形*/</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>border <strong>也会影响盒子的实际大小</strong>。</p><h2 id="border-radius" tabindex="-1"><a class="header-anchor" href="#border-radius" aria-hidden="true">#</a> border-radius</h2><p><code>border-radius</code>属性可以设置<strong>圆角</strong>，可以设置四个值，设置 4 个圆角。一般都值设置一个。设置 50%可以设置为圆形。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div</span> <span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 200px
    <span class="token property">height</span><span class="token punctuation">:</span> 200px
    <span class="token property">border-radius</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token comment">/*10px是圆的半径，可以写4个值*/</span>
    <span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span><span class="token comment">/*如果盒子是正方形，将盒子设置为圆形*/</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="padding" tabindex="-1"><a class="header-anchor" href="#padding" aria-hidden="true">#</a> padding</h2><p>padding 内边距属性可以设置<strong>内边距</strong>，即边框和内容的距离。padding 有 4 个方向。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">padding-top</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span> <span class="token comment">/*上内边距*/</span>
<span class="token property">padding-right</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span> <span class="token comment">/*右内边距*/</span>
<span class="token property">padding-bottom</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span> <span class="token comment">/*下内边距*/</span>
<span class="token property">padding-left</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span> <span class="token comment">/*左内边距*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>padding 内边距的简写：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">padding</span><span class="token punctuation">:</span> 30px 20px 40px 100px<span class="token punctuation">;</span> <span class="token comment">/*(上、右、下、左)（顺时针方向，用空格隔开*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>padding <strong>也会影响盒子的实际大小</strong></p><h2 id="margin" tabindex="-1"><a class="header-anchor" href="#margin" aria-hidden="true">#</a> margin</h2><p>margin 外边距属性可以设置<strong>外边距</strong>，即控制盒子于盒子之间的距离。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">margin-top</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span> <span class="token comment">/*上外边距*/</span>
<span class="token property">margin-right</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span> <span class="token comment">/*右外边距，默认情况下，没用。*/</span>
<span class="token property">margin-bottom</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span> <span class="token comment">/*下外边距*/</span>
<span class="token property">margin-left</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span> <span class="token comment">/*左外边距*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>margin 外边距的简写：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">margin</span><span class="token punctuation">:</span> 30px 20px 40px 100px<span class="token punctuation">;</span> <span class="token comment">/*(上、右、下、左)顺时针方向，用空格隔开*/</span>
<span class="token property">margin</span><span class="token punctuation">:</span> 20px 40px 60px<span class="token punctuation">;</span> <span class="token comment">/*(上 20、左右40、下60)3个值时，其实也是顺时针方向，左=右*/</span>
<span class="token property">margin</span><span class="token punctuation">:</span> 20px 40px<span class="token punctuation">;</span> <span class="token comment">/*(上下 20、左右40)2个值时，其实也是顺时针方向，上=下，左=右 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="outline" tabindex="-1"><a class="header-anchor" href="#outline" aria-hidden="true">#</a> outline</h2><p>outline 属性用来元素的<strong>轮廓</strong>，用法和 border 一样，但不会影响布局。</p><p>一般和<code>:hover</code>配合使用实现一个鼠标移入效果。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div:hover</span> <span class="token punctuation">{</span>
  <span class="token property">outline</span><span class="token punctuation">:</span> 1px solid red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token property">outline</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span> <span class="token comment">/*取消表单文本框的默认轮廓*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>outline 属性不会贴合盒子的圆角</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">border-radius</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
<span class="token property">outline</span><span class="token punctuation">:</span> 1px solid red<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="box-shadow" tabindex="-1"><a class="header-anchor" href="#box-shadow" aria-hidden="true">#</a> box-shadow</h2><p><code>box-shadow</code>属性用来设置元素的<strong>阴影效果</strong>，也不会影响布局。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">box-shadow</span><span class="token punctuation">:</span> 10px 10px 50px 10px rgba<span class="token punctuation">;</span> <span class="token comment">/*水平偏移量 垂直偏移量  阴影的模糊半径 阴影尺寸 阴影颜色*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>box-shadow 支持逗号分割语法，可以创建任意数量的投影。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 0 0 10px #655<span class="token punctuation">,</span> 0 0 0 15px red<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="margin-布局" tabindex="-1"><a class="header-anchor" href="#margin-布局" aria-hidden="true">#</a> margin 布局</h2><p><strong>在标准流的盒子</strong>，margin 外边距可以让块级盒子水平居中，需要满足：</p><ul><li>盒子必须指定了宽度 width</li><li>盒子左右的外边距都设置为 0</li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 960px<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
  <span class="token property">margin</span><span class="token punctuation">:</span> 0 auto<span class="token punctuation">;</span> <span class="token comment">/*让这个div自己在大容器中的水平方向居中*/</span>
  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span> <span class="token comment">/*让这个div内部的文本居中*/</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>元素在其父元素中水平布局的位置必须满足：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>\`子元素\`margin-left\` + \`border-left\` + \`padding-left\` + \`width\` + \`padding-right\` + \`padding-right\` + \`margin-right\` = \`父元素width\`
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>以上等式必须满足，如果相加结果等式不成立，则称为过度约束，等式会自动调整。</li><li>如果 7 个值中没有<code>auto</code>，浏览器会自动调整<code>margin-right</code>使等式成立。</li><li>7 个值中有 3 个值<strong>margin-right、width、margin-left</strong>可以设置成<strong>auto</strong>，设置成<code>auto</code>的值会自动调整。<code>width的默认值就是auto</code>。</li><li>如果将<code>width</code>和<code>margin-left或者margin-right</code>设置为<code>auto</code>，<code>width</code>会调整到最大。</li><li>如果 3 个值都设置成<code>auto</code>，外边距都是 0，<code>width</code>最大。</li><li>如果<code>margin-left和margin-right</code>设置为<code>auto</code>，则两个值会相等。这个特点可以用来设置元素的水平居中。<code>margin:0 auto;</code></li></ul><p><strong>行内元素不会独占一行，所以设置<code>padding</code>、<code>border</code>和<code>margin</code>不会影响垂直页面布局</strong></p><h2 id="外边距重叠" tabindex="-1"><a class="header-anchor" href="#外边距重叠" aria-hidden="true">#</a> 外边距重叠</h2><p><strong>标准文档流中</strong>，相邻的<strong>垂直方向</strong>外边距会发生<strong>重叠现象</strong>。</p><ul><li><strong>兄弟元素</strong>之间垂直外边距（同号）会取两者之间（绝对值）最大值。异号取相加值。</li><li><strong>父子元素</strong>之间的垂直外边距（上边距），子元素会传递给父元素。</li></ul><p>总结：</p><ul><li><strong><code>margin</code>这个属性，本质上描述的是兄弟和兄弟之间的距离； 最好不要用这个 margin 表达父子之间的距离。</strong></li><li><strong>要表达父子之间的距离，我们一定要善于使用父亲的<code>padding</code>（height 需要减去），而不是儿子的<code>margin</code>。</strong></li><li>只有竖直方向的<code>margin</code>才会有塌陷（叠加）现象。</li><li>当元素脱离文档流后，<code>margin</code>塌陷（叠加）现象会消失。兄弟元素的外边距始终会相加。</li></ul><h2 id="overflow" tabindex="-1"><a class="header-anchor" href="#overflow" aria-hidden="true">#</a> overflow</h2><p>子元素的大小超过了父元素，则子元素会从父元素中溢出。</p><p>溢出时，可以通过<code>overflow</code>属性设置父元素，属性值：</p><ul><li><code>visible</code>：默认值，子元素在父元素外部显示。</li><li><code>hidden</code>：溢出的内容将被裁剪不会显示。</li><li><code>scroll</code>：生成两个滚动条，通过滚动条查看完整内容。</li><li><code>auto</code>：根据需要生成滚动条。</li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span> <span class="token comment">/*可以解决外边距重叠*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="浏览器默认样式" tabindex="-1"><a class="header-anchor" href="#浏览器默认样式" aria-hidden="true">#</a> 浏览器默认样式</h2><p>通常情况下，浏览器会为元素设置默认样式。默认样式的存在会影响页面的布局，通常情况下编写（PC 端）网页时必须去除浏览器的默认样式。</p>`,69),r=n("li",null,[s("通配选择器同时设置"),n("code",null,"margin:0;"),s("和"),n("code",null,"padding:0;"),s("可以去除大多数默认样式。")],-1),u=n("li",null,"引入 reset.css 重置样式表",-1),m={href:"https://github.com/necolas/normalize.css",target:"_blank",rel:"noopener noreferrer"};function v(k,g){const a=t("ExternalLinkIcon");return p(),o("div",null,[d,n("ul",null,[r,u,n("li",null,[s("引入"),n("a",m,[s("normalize.css"),i(a)]),s("重置样式表(移动端)")])])])}const h=e(l,[["render",v],["__file","11_box.html.vue"]]);export{h as default};
