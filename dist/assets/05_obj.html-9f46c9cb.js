import{_ as n,o as s,c as a,f as t}from"./app-007a9be1.js";const p={},o=t(`<h1 id="对象的简写" tabindex="-1"><a class="header-anchor" href="#对象的简写" aria-hidden="true">#</a> 对象的简写</h1><p>ES6 允许在大括号里面，直接写入变量和函数，作为对象的属性和方法。这样的书写更加简洁。</p><ol><li>属性的增强</li><li>方法的增强</li><li>计算属性名的写法</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> msg <span class="token operator">=</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> <span class="token function-variable function">fun</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;函数fun&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// 3. 计算属性名的写法</span>
<span class="token keyword">const</span> key <span class="token operator">=</span> <span class="token string">&quot;address&quot;</span> <span class="token operator">+</span> <span class="token string">&quot; city&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">msg</span><span class="token operator">:</span> msg<span class="token punctuation">,</span> <span class="token comment">//ES5写法</span>
  fun<span class="token punctuation">,</span> <span class="token comment">//ES6简写</span>
  <span class="token function-variable function">fun1</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;对象中的函数fun1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//ES5写法</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">fun2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;对象中的函数fun2,简写形式&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//ES6写法</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token string">&quot;广州&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意：对象简写形式简化了代码，所以以后用简写就对了</strong>。</p>`,5),e=[o];function c(l,i){return s(),a("div",null,e)}const r=n(p,[["render",c],["__file","05_obj.html.vue"]]);export{r as default};
