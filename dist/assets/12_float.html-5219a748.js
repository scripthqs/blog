import{_ as n,o as s,c as a,f as t}from"./app-06f72143.js";const e={},p=t(`<h1 id="浮动-float" tabindex="-1"><a class="header-anchor" href="#浮动-float" aria-hidden="true">#</a> 浮动 float</h1><h2 id="浮动的简介" tabindex="-1"><a class="header-anchor" href="#浮动的简介" aria-hidden="true">#</a> 浮动的简介</h2><p>float 浮动属性可以使一个元素向其父元素的左侧或右侧移动</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div</span> <span class="token punctuation">{</span>
  <span class="token property">float</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span> <span class="token comment">/*默认值，不浮动*/</span>
  <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span> <span class="token comment">/*向左浮动*/</span>
  <span class="token property">float</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span> <span class="token comment">/*向右浮动*/</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="浮动的特点" tabindex="-1"><a class="header-anchor" href="#浮动的特点" aria-hidden="true">#</a> 浮动的特点</h2><ol><li>浮动会脱离文档流，此时，元素就会有脱离文档流后的特点（<strong>行内块元素特点</strong>）</li><li>兄弟浮动的元素互相贴靠，默认上沿对齐，宽度不够就会掉下去</li><li>浮动的元素不会挡住文字</li></ol><h2 id="高度塌陷" tabindex="-1"><a class="header-anchor" href="#高度塌陷" aria-hidden="true">#</a> 高度塌陷</h2><p>在文档流中，父元素的高度默认被子元素撑开，当<strong>子元素浮动，脱离文档流</strong>后，子元素无法撑起父元素的高度，导致父元素高度丢失，下面的元素会自动上移导致页面布局混乱。</p><p>高度塌陷是浮动布局的一个常见的问题：</p><ol><li>给浮动元素的父（祖先）元素加高度（至少保证高度大于儿子的高度）</li><li>实际开发中，父元素的的高度常常不会写死，而是由内容撑开</li></ol><h2 id="bfc" tabindex="-1"><a class="header-anchor" href="#bfc" aria-hidden="true">#</a> BFC</h2><p>BFC(Block Formatting Context)：块级格式化环境。BFC 是一个 CSS 的隐含属性，可以为一个元素开启 BFC，开启 BFC 后该区域会变成一个独立的布局区域。</p><p>开启<strong>BFC 元素的特点</strong>：</p><ul><li>开启 BFC 的元素，不会被浮动元素覆盖。</li><li>开启 BFC 的元素，子元素和父元素外边距不会重叠。</li><li>开启 BFC 的元素，可以包含浮动的子元素。</li></ul><p>开启<strong>BFC 的方法</strong>：</p><ol><li><p>设置元素的浮动，但是会脱离文档流（不推荐）</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div</span> <span class="token punctuation">{</span>
  <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>将元素设置为行内块元素（不推荐）</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>将元素的<code>overflow</code>设置为一个非<code>visible</code>值</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div</span> <span class="token punctuation">{</span>
  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>开启绝对定位(fixed 是一种特殊的绝对定位)</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div</span> <span class="token punctuation">{</span>
  <span class="token property">position</span><span class="token punctuation">:</span> absolute/fixed<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="清除浮动的影响" tabindex="-1"><a class="header-anchor" href="#清除浮动的影响" aria-hidden="true">#</a> 清除浮动的影响</h2><p>浮动会造成高度塌陷的问题，需要进行处理</p><h3 id="加高法" tabindex="-1"><a class="header-anchor" href="#加高法" aria-hidden="true">#</a> 加高法</h3><p>给浮动元素的父（祖先）元素加高度（至少保证高度大于儿子的高度）即可解决。</p><p>但是实际开发中，父元素的高度往往不会写死，而是由内容撑开</p><h3 id="clear" tabindex="-1"><a class="header-anchor" href="#clear" aria-hidden="true">#</a> clear</h3><p>clear 属性可以<strong>清除浮动元素对当前元素</strong>所产生的影响</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div</span> <span class="token punctuation">{</span>
  <span class="token property">clear</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span> <span class="token comment">/*清除左侧浮动元素对对当前元素的影响*/</span>
  <span class="token property">clear</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span> <span class="token comment">/*清除左侧浮动元素对对当前元素的影响*/</span>
  <span class="token property">clear</span><span class="token punctuation">:</span> both<span class="token punctuation">;</span> <span class="token comment">/*清除浮动元素对对当前元素的影响*/</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>但是存在问题：<strong>它所在的标签，margin 属性失效了</strong>。</p><h3 id="隔墙法" tabindex="-1"><a class="header-anchor" href="#隔墙法" aria-hidden="true">#</a> 隔墙法</h3><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>father<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>son<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wall<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
  <span class="token selector">.father</span> <span class="token punctuation">{</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 10px red solid<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token selector">.son</span> <span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> #bfa<span class="token punctuation">;</span>
    <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token selector">.wall</span> <span class="token punctuation">{</span>
    <span class="token property">clear</span><span class="token punctuation">:</span> both<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>隔墙法利用 HTML 解决 CSS 的问题，可以利用伪元素改进：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.father::after</span> <span class="token punctuation">{</span>
  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span> <span class="token comment">/*伪元素是行内元素，需要转化行内元素独占一行*/</span>
  <span class="token property">clear</span><span class="token punctuation">:</span> both<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个方法基本是解决高度塌陷的最好方法。这个方法<strong>也可以解决外边距重叠</strong>问题。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>father<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>son<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
  <span class="token selector">.father::before</span> <span class="token punctuation">{</span>
    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token property">display</span><span class="token punctuation">:</span> table<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>总结：可以使用下面这段代码<strong>同时解决高度塌陷和外边距重叠的问题</strong>，直接给需要的元素加上<code>clear</code>的类。出自《CSS 权威指南》。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.clearfix::before,
.clearfix::after</span> <span class="token punctuation">{</span>
  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
  <span class="token property">display</span><span class="token punctuation">:</span> table<span class="token punctuation">;</span>
  <span class="token property">clear</span><span class="token punctuation">:</span> both<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将需要解决高度塌陷和外边距重叠的元素加上这个类</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>&lt;div class=<span class="token string">&quot;father clearfix&quot;</span>&gt;
    &lt;div class=<span class="token string">&quot;son&quot;</span>&gt;&lt;/div&gt;
&lt;/div&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="overflow" tabindex="-1"><a class="header-anchor" href="#overflow" aria-hidden="true">#</a> overflow</h3><p><code>overflow: hidden;</code>这个方法不但可以<strong>解决外边距重叠</strong>问题，还能<strong>解决高度塌陷</strong>的问题</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.father</span> <span class="token punctuation">{</span>
  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>原理就是<code>overflow: hidden;</code>可以开启元素的 BFC</p><h2 id="浮动布局" tabindex="-1"><a class="header-anchor" href="#浮动布局" aria-hidden="true">#</a> 浮动布局</h2><ul><li>先用标准流的<strong>父元素排列上下位置</strong>，之后内部子元素采取<strong>浮动排列左右</strong>位置。</li><li>设置浮动时要注意，<strong>浮动大家一起浮动</strong>，不能一个标签单独浮动。</li></ul>`,41),l=[p];function c(o,i){return s(),a("div",null,l)}const d=n(e,[["render",c],["__file","12_float.html.vue"]]);export{d as default};
