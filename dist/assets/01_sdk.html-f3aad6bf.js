import{_ as n,o as s,c as a,f as t}from"./app-10c4e004.js";const e={},p=t(`<h1 id="前端监控" tabindex="-1"><a class="header-anchor" href="#前端监控" aria-hidden="true">#</a> 前端监控</h1><p>监控 SDK（Software Development Kit，软件开发工具包）在前端领域通常指的是用于采集、上报和分析前端应用运行数据的工具库。它可以帮助开发者快速集成前端监控能力，无需手动编写底层采集和上报逻辑。</p><ol><li>自动采集性能数据（如白屏时间、首屏时间、资源加载时间、长任务（longtask）、FCP/LCP 等）</li><li>捕获并上报 JS 错误、Promise 异常、资源加载失败等</li><li>记录用户行为（如点击、页面跳转、表单提交等）</li><li>监控接口请求、白屏、崩溃等异常</li><li>数据上报到后端平台，便于分析和告警</li></ol><h2 id="性能监控" tabindex="-1"><a class="header-anchor" href="#性能监控" aria-hidden="true">#</a> 性能监控</h2><ul><li>长任务，超过 50ms 的任务</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;load&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> timing <span class="token operator">=</span> performance<span class="token punctuation">.</span>timing<span class="token punctuation">;</span>
  <span class="token comment">// 计算各阶段耗时</span>
  <span class="token keyword">const</span> whiteScreen <span class="token operator">=</span> timing<span class="token punctuation">.</span>responseStart <span class="token operator">-</span> timing<span class="token punctuation">.</span>navigationStart<span class="token punctuation">;</span>
  <span class="token keyword">const</span> firstScreen <span class="token operator">=</span> timing<span class="token punctuation">.</span>domContentLoadedEventEnd <span class="token operator">-</span> timing<span class="token punctuation">.</span>navigationStart<span class="token punctuation">;</span>
  <span class="token comment">// 上报到监控平台</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="错误监控" tabindex="-1"><a class="header-anchor" href="#错误监控" aria-hidden="true">#</a> 错误监控</h2><ul><li>捕获 JS 运行时错误、Promise 未捕获异常、资源加载失败等。</li><li>通过 window.onerror、window.addEventListener(&#39;error&#39;, ...)、window.onunhandledrejection 监听并上报。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>window<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">msg<span class="token punctuation">,</span> url<span class="token punctuation">,</span> line<span class="token punctuation">,</span> col<span class="token punctuation">,</span> error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 上报错误信息</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
window<span class="token punctuation">.</span><span class="token function-variable function">onunhandledrejection</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 上报 Promise 错误</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="行为监控" tabindex="-1"><a class="header-anchor" href="#行为监控" aria-hidden="true">#</a> 行为监控</h2><ul><li>采集用户点击、页面跳转、表单提交、停留时长等行为数据。</li><li>可通过事件监听、埋点、自动化采集等方式实现。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 上报点击事件</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="页面什么使用发送埋点数据" tabindex="-1"><a class="header-anchor" href="#页面什么使用发送埋点数据" aria-hidden="true">#</a> 页面什么使用发送埋点数据</h2><ul><li>beforeunload visibilitychange 事件，监听页面关闭</li><li>navigator.sendBeacon 在页面关闭或切换时发送积压的埋点数据，保证数据可靠上报。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;beforeunload&quot;</span><span class="token punctuation">,</span> sendPendingData<span class="token punctuation">)</span><span class="token punctuation">;</span>
document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;visibilitychange&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>visibilityState <span class="token operator">===</span> <span class="token string">&quot;hidden&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">sendPendingData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 全局数组 pendingData 存储待上报的埋点数据</span>
<span class="token keyword">let</span> pendingData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// 埋点数据采集时调用</span>
<span class="token keyword">function</span> <span class="token function">collectData</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  pendingData<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// sendPendingData 实现</span>
<span class="token keyword">function</span> <span class="token function">sendPendingData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>pendingData<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token comment">// 发送所有积压的数据</span>
  navigator<span class="token punctuation">.</span><span class="token function">sendBeacon</span><span class="token punctuation">(</span><span class="token string">&quot;/log&quot;</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>pendingData<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 清空已上报的数据</span>
  pendingData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,15),o=[p];function i(c,l){return s(),a("div",null,o)}const d=n(e,[["render",i],["__file","01_sdk.html.vue"]]);export{d as default};
