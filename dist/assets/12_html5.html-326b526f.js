import{_ as n,o as a,c as s,f as t}from"./app-10c4e004.js";const p={},e=t(`<h1 id="html5-新特性" tabindex="-1"><a class="header-anchor" href="#html5-新特性" aria-hidden="true">#</a> HTML5 新特性</h1><p>HTML5 定义了一系列新元素，如新语义标签、智能表单、多媒体标签等，还提供了一些 javascript API，如地理定位、重力感应、硬件访问等，可以在浏览器内实现类原生应用，可以结合 Canvas 开发网页游戏。</p><p>总结：<strong>HTML5 是新一代开发富客户端应用程序整体解决方案，包括：HTML5，CSS3，javascript API 在内的一套技术组合。</strong></p><ul><li>富客户端：具有很强的交互性和体验的客户端程序。比如说，浏览博客，是比较简单的客户端；一个在线听歌的网站、即时聊天网站就是富客户端。</li></ul><h2 id="html-的应用场景" tabindex="-1"><a class="header-anchor" href="#html-的应用场景" aria-hidden="true">#</a> HTML 的应用场景</h2><ol><li>极具表现力的网页：内容简约而不简单。</li><li>网页应用程序： <ul><li>代替 PC 端的软件：iCloud、百度脑图、Office 365 等。</li><li>APP 端的网页：淘宝、京东、美团等。</li><li>微信端：公众号、小程序等。</li></ul></li><li>混合式本地应用。</li><li>简单的游戏。</li></ol><h2 id="语义化的作用" tabindex="-1"><a class="header-anchor" href="#语义化的作用" aria-hidden="true">#</a> 语义化的作用</h2><ul><li>能够便于开发者阅读和写出更优雅的代码。</li><li>同时让浏览器或是网络爬虫可以很好地解析，从而更好分析其中的内容。</li><li>更好地搜索引擎优化。</li></ul><p>总结：<strong>HTML 的职责是描述一块内容是什么（或其意义），而不是它长什么样子；它的外观应该由 CSS 来决定。</strong></p><p>HTML5 增加了大量有意义的语义标签，更有利于搜索引擎或辅助设备理解 HTML 页面内容。HTML5 会让 HTML 代码的内容更结构化、标签更语义化。</p><p>最常见的 css+div 传统经典布局：</p><p><img src="https://raw.githubusercontent.com/scripthqs/assets/master/blog/traditional_layout.png" alt="传统布局"></p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- 头部 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>header<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>nav<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- 主体部分 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>main<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- 文章 --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>article<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- 侧边栏 --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>aside<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- 底部 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>footer<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>html5 经典布局：</p><p><img src="https://raw.githubusercontent.com/scripthqs/assets/master/blog/h5_layout.png" alt="html5经典布局"></p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- 头部 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>nav<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- 主体部分 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>main<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- 文章 --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>article</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>article</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- 侧边栏 --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>aside</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>aside</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- 底部 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>footer</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>footer</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="浏览器兼容性" tabindex="-1"><a class="header-anchor" href="#浏览器兼容性" aria-hidden="true">#</a> 浏览器兼容性</h2><p>IE 浏览器已经退出历史的舞台，现在基本不需要考虑 IE 浏览器的兼容性了。</p><h2 id="新增的表单类型" tabindex="-1"><a class="header-anchor" href="#新增的表单类型" aria-hidden="true">#</a> 新增的表单类型</h2><p><code>&lt;input&gt;</code>有以下属性：</p><ul><li>email 只能输入 email 格式。自动带有验证功能。</li><li>tel 手机号码。</li><li>url 只能输入 url 格式。</li><li>number 只能输入数字。</li><li>search 搜索框</li><li>range 滑动条</li><li>color 拾色器</li><li>time 时间</li><li>date 日期</li><li>datetime 时间日期</li><li>month 月份</li><li>week 星期</li></ul><p>上面的部分类型是针对移动设备生效的，且具有一定的兼容性，在实际应用当中可选择性的使用。</p><h2 id="表单元素-标签" tabindex="-1"><a class="header-anchor" href="#表单元素-标签" aria-hidden="true">#</a> 表单元素（标签）</h2><ul><li><code>&lt;datalist&gt;</code> :数据列表</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">list</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>myData<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>datalist</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>myData<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">&gt;</span></span>专科<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">&gt;</span></span>本科<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">&gt;</span></span>研究生<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">&gt;</span></span>学龄前儿童<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>datalist</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上方代码中，input 里的 list 属性和 datalist 进行了绑定。数据列表可以自动提示和下拉选择。</p><ul><li><p><code>&lt;keygen&gt;</code>：提供一种验证用户的可靠方法。</p><ul><li>keygen 元素是密钥对生成器（key-pair generator）。当提交表单时，会生成两个键：一个公钥，一个私钥。</li><li>私钥（private key）存储于客户端，公钥（public key）则被发送到服务器。公钥可用于之后验证用户的客户端证书（client certificate）。</li></ul></li><li><p><code>&lt;meter&gt;</code>：度量器</p><ul><li>low：低于该值后警告</li><li>high：高于该值后警告</li><li>value：当前值</li><li>max：最大值</li><li>min：最小值。</li></ul></li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meter</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>81<span class="token punctuation">&quot;</span></span> <span class="token attr-name">min</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0<span class="token punctuation">&quot;</span></span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100<span class="token punctuation">&quot;</span></span> <span class="token attr-name">low</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>60<span class="token punctuation">&quot;</span></span> <span class="token attr-name">high</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>80<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="表单属性" tabindex="-1"><a class="header-anchor" href="#表单属性" aria-hidden="true">#</a> 表单属性</h2><ul><li>placeholder 占位符（提示文字）</li><li>autofocus 自动获取焦点</li><li>multiple 文件上传多选或多个邮箱地址</li><li>autocomplete 自动完成（填充的）。on 开启（默认），off 取消。用于表单元素，也可用于表单自身(on/off)</li><li>form 指定表单项属于哪个 form，处理复杂表单时会需要</li><li>novalidate 关闭默认的验证功能（只能加给 form）</li><li>required 表示必填项</li><li>pattern 自定义正则，验证表单</li></ul><h2 id="表单事件" tabindex="-1"><a class="header-anchor" href="#表单事件" aria-hidden="true">#</a> 表单事件</h2><ul><li>oninput()：用户输入内容时触发，可用于输入字数统计。</li><li>oninvalid()：验证不通过时触发。比如，如果验证不通过时，想弹出一段提示文字，就可以用到它。</li></ul><h2 id="dom-操作" tabindex="-1"><a class="header-anchor" href="#dom-操作" aria-hidden="true">#</a> DOM 操作</h2><p>获取元素</p><ul><li><code>document.querySelector(&quot;selector&quot;)</code> 通过 CSS 选择器获取符合条件的第一个元素。</li><li><code>document.querySelectorAll(&quot;selector&quot;)</code> 通过 CSS 选择器获取符合条件的所有元素，以类数组形式存在。</li></ul><p><strong>类数组或者叫伪数组，拥有 length 属性，不具有数组所具有的方法。</strong></p><p>类名操作</p><ul><li><code>Node.classList.add(&quot;class&quot;)</code> 添加 class</li><li><code>Node.classList.remove(&quot;class&quot;)</code> 移除 class</li><li><code>Node.classList.toggle(&quot;class&quot;)</code> 切换 class，有则移除，无则添加</li><li><code>Node.classList.contains(&quot;class&quot;)</code>检测是否存在 class</li></ul><p>自定义属性</p><ul><li>js 里可以通过 box1.index=100; box1.title 来自定义属性和获取属性。</li><li>H5 可以直接在标签里添加自定义属性，但必须以 data- 开头。(<strong>图片懒加载会使用到</strong>)</li></ul><h2 id="拖拽属性" tabindex="-1"><a class="header-anchor" href="#拖拽属性" aria-hidden="true">#</a> 拖拽属性</h2><p>在 HTML5 的规范中，我们可以通过为元素增加 draggable=&quot;true&quot; 来设置此元素是否可以进行拖拽操作，其中图片、链接默认是开启拖拽的。</p><p>拖拽元素的事件监听：（应用于拖拽元素）</p><ul><li><code>ondragstart</code>当拖拽开始时调用</li><li><code>ondragleave</code> 当鼠标离开拖拽元素时调用</li><li><code>ondragend</code> 当拖拽结束时调用</li><li><code>ondrag</code> 整个拖拽过程都会调用</li></ul><h3 id="目标元素" tabindex="-1"><a class="header-anchor" href="#目标元素" aria-hidden="true">#</a> 目标元素</h3><p>比如说，你想把元素 A 拖拽到元素 B 里，那么元素 B 就是目标元素。页面中任何一个元素都可以成为目标元素。</p><p>目标元素的事件监听（应用于目标元素）：</p><ul><li><code>ondragenter</code> 当拖拽元素进入时调用</li><li><code>ondragover</code> 当拖拽元素停留在目标元素上时，就会连续一直触发（不管拖拽元素此时是移动还是不动的状态）</li><li><code>ondrop</code> 当在目标元素上松开鼠标时调用</li><li><code>ondragleave</code> 当鼠标离开目标元素时调用</li></ul><h2 id="历史" tabindex="-1"><a class="header-anchor" href="#历史" aria-hidden="true">#</a> 历史</h2><p>界面上所有的 JS 操作不会被浏览器记住，无法回到之前的状态，在 HTML5 中可以通过<code>window.history</code>对象操作访问历史状态，让一个页面可以有多个历史状态。 <code>window.history</code>可以让我们管理历史记录，用于单页面应用(Single Page Application)，可以无刷新改变网页内容。</p><ul><li><code>windows.history.forward();</code>:前进</li><li><code>window.history.back();</code> : 后退</li><li><code>window.history.go();</code> :刷新</li><li><code>window.history.go(n);</code>: //n=1 表示前进；n=-1 后退；n=0s 刷新。如果移动的位置超出了访问历史的边界，会静默失败，但不会报错。</li></ul><h2 id="地理定位" tabindex="-1"><a class="header-anchor" href="#地理定位" aria-hidden="true">#</a> 地理定位</h2><p>我们可以基于用户位置开发互联网应用，即基于位置服务 LBS (Location Base Service)。获取地理信息的方式：</p><ol><li>IP 地址</li><li>三维坐标 <ul><li>GPS（Global Positioning System，全球定位系统）</li><li>Wi-Fi 定位：仅限于室内</li><li>手机信号定位：通过运营商的信号塔定位。</li></ul></li></ol><p>浏览器会自动以最优方式去获取用户地理信息。HTML5 Geolocation（地理位置定位）规范提供了一套保护用户隐私的机制，必须先得到用户明确许可，可能获得用户的位置信息。</p><h2 id="全屏" tabindex="-1"><a class="header-anchor" href="#全屏" aria-hidden="true">#</a> 全屏</h2><p>HTML5 规范允许用户自定义网页上任一元素全屏显示。</p><p>开启/关闭全屏显示：</p><ul><li><code>requestFullscreen()</code>：//让元素开启全屏显示</li><li><code>exitFullscreen()</code> ：//让当前文档退出全屏模式</li><li><code>Window..fullScreen</code>:检测当前是否处于全屏状态</li><li>不同浏览器需要加私有前缀，比如：</li><li>document.webkitIsFullScreen</li><li>document.mozFullScreen</li></ul><p>全屏的伪类</p><ul><li><code>:full-screen .box {}</code></li><li><code>:-webkit-full-screen {}</code></li><li><code>:moz-full-screen {}</code></li></ul><p>比如说，当元素处于全屏状态时，改变它的样式。这时就可以用到伪类。</p><h2 id="web-存储" tabindex="-1"><a class="header-anchor" href="#web-存储" aria-hidden="true">#</a> Web 存储</h2><p>在网页中，会经常性在本地存储大量的数据，传统方式我们以<code>document.cookie</code>来进行存储，但是存储大小只有 4kb 左右，解析也非常复杂，H5 有两种存储方式：</p><ol><li><p><code>window.sessionStorage</code>：会话存储</p><ul><li>保存在内存中</li><li>生命周期为关闭浏览器窗口，窗口关闭时浏览器销毁</li><li>在同一个窗口下数据可以共享</li></ul></li><li><p><code>window.localStorage</code>：本地存储</p><ul><li>有可能保存在浏览器内存里，也可能在硬盘中</li><li>永久生效除非手动删除</li><li>可以多串口共享</li></ul></li></ol><p>Web 存储的特性：</p><ol><li>设置、读取方便</li><li>容量较大，<code>sessionStorage</code>约 5M，<code>localStorage</code>约 20M</li><li>只能存储字符串，可以将对象 JSON.stringfy() 编码后存储</li></ol><p>JSON.stringify() 方法将一个 JavaScript 对象或值转换为 JSON 字符串。</p><p>封装 storage</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">enum</span> CacheType <span class="token punctuation">{</span>
  Local<span class="token punctuation">,</span>
  Session
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Cache</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">storage</span><span class="token operator">:</span> Storage

  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">type</span><span class="token operator">:</span> CacheType</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>storage <span class="token operator">=</span> type <span class="token operator">===</span> CacheType<span class="token punctuation">.</span>Local <span class="token operator">?</span> localStorage <span class="token operator">:</span> sessionStorage
  <span class="token punctuation">}</span>

  <span class="token function">setCache</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">key</span><span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>storage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token function">getCache</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">key</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>storage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token function">removeCache</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">key</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>storage<span class="token punctuation">.</span><span class="token function">removeItem</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>storage<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> localCache <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cache</span><span class="token punctuation">(</span>CacheType<span class="token punctuation">.</span>Local<span class="token punctuation">)</span>
<span class="token keyword">const</span> sessionCache <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cache</span><span class="token punctuation">(</span>CacheType<span class="token punctuation">.</span>Session<span class="token punctuation">)</span>

<span class="token keyword">export</span> <span class="token punctuation">{</span> localCache<span class="token punctuation">,</span> sessionCache <span class="token punctuation">}</span>

<span class="token comment">// import { localCache ,sessionCache} from &#39;@/utils/cache&#39;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="canvas-绘图" tabindex="-1"><a class="header-anchor" href="#canvas-绘图" aria-hidden="true">#</a> Canvas 绘图</h2><p>可以使用 js 在其中绘制图像</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tutorial<span class="token punctuation">&quot;</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>300<span class="token punctuation">&quot;</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>300<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="data-属性" tabindex="-1"><a class="header-anchor" href="#data-属性" aria-hidden="true">#</a> Data 属性</h2><p><code>data-</code> 属性是一种自定义属性，用于存储与元素相关的私有数据，必须以<code>data-</code>开头，可以通过 <code>dataset</code> 属性来访问这些自定义属性</p><ul><li>使用 <code>setAttribute()</code>来设置 <code>data-</code>属性的值</li><li>使用 <code>getAttribute()</code>来获取 <code>data-</code> 属性的值</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box<span class="token punctuation">&quot;</span></span> <span class="token attr-name">age</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>20<span class="token punctuation">&quot;</span></span> <span class="token attr-name">data-name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>abcd<span class="token punctuation">&quot;</span></span> <span class="token attr-name">data-age</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>25<span class="token punctuation">&quot;</span></span> <span class="token attr-name">data-mes</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hell world<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>title<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">const</span> boxEl <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;.box&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>boxEl<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>boxEl<span class="token punctuation">.</span>dataset<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//可以拿到data对象里面的数据</span>
  boxEl<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;data-age&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;30&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>boxEl<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;data-name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;abcd&quot;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>boxEl<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;data-age&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;30&quot;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,77),l=[e];function o(c,i){return a(),s("div",null,l)}const d=n(p,[["render",o],["__file","12_html5.html.vue"]]);export{d as default};
