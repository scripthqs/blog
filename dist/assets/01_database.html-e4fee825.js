import{_ as e,o as a,c as l,f as i}from"./app-007a9be1.js";const t={},r=i('<h1 id="数据库" tabindex="-1"><a class="header-anchor" href="#数据库" aria-hidden="true">#</a> 数据库</h1><h2 id="数据库简介" tabindex="-1"><a class="header-anchor" href="#数据库简介" aria-hidden="true">#</a> 数据库简介</h2><p>数据库 Database，是按照数据的结构来组织、存储和管理数据的仓库。本质就是用来存数据的一个软件或者说一个程序。</p><p>在程序开发中，经常会有很多数据需要保存，比如用户的信息，理论上，可以将数据保存到一个对象变量里，但是变量都是保存在内存中的，一旦程序运行结束或者计算机断电时，程序中运行的数据就会丢失。</p><p>所以我们需要将程序运行的数据持久的存在磁盘里，以确保数据的安全性。</p><p>我们也可以考虑将数据保存在文件系统里，但是不太方便，我们使用数据库专门来存储数据。</p><h2 id="数据库的分类" tabindex="-1"><a class="header-anchor" href="#数据库的分类" aria-hidden="true">#</a> 数据库的分类</h2><ul><li>关系型数据库(RDBMS)： <ul><li>MySQL、SQL Server...</li><li>关系数据库里都是表</li><li>SQL 是一门语言</li></ul></li><li>非关系型数据库(NO SQL)：Not only SQL <ul><li>MongoDB、Redis...</li><li>键值对数据库</li><li>文档数据库 MongoDB</li></ul></li></ul><p>区别：</p><ul><li>关系型数据库通常需要建多个二位数据表，表相互关联有一对一，一对多，多对多等关系，利用 SQL 语句在多张表查询数据</li><li>非关系数据库类型会简单一些，存储更加自由(可以将一个复杂的 json 数据直接放在数据库中)，基于 key-value 的对应关系，查询过程中不需要 SQL 解析</li><li>目前公司进行后端开发(Java,Go,Node)以关系型数据库为主</li><li>做爬虫，存储大量数据时常见非关系型数据库</li></ul>',10),o=[r];function d(n,s){return a(),l("div",null,o)}const h=e(t,[["render",d],["__file","01_database.html.vue"]]);export{h as default};
