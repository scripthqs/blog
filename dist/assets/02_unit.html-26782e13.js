import{_ as n,o as e,c as s,f as a}from"./app-007a9be1.js";const i={},t=a(`<h1 id="单位" tabindex="-1"><a class="header-anchor" href="#单位" aria-hidden="true">#</a> 单位</h1><p>html 的单位只有像素 px 一种，可以省略不写。CSS 默认没有单位，<strong>所以必须要写</strong>。</p><h2 id="像素-px" tabindex="-1"><a class="header-anchor" href="#像素-px" aria-hidden="true">#</a> 像素 px</h2><p>像素 px 是一个相对单位，常说的分辨率 <code>1920\\*1080</code> 就是屏幕上的小点。</p><p>水平方向是 1920 个像素点，垂直方向是 1080 个像素点。不同屏幕的像素大小是不同的。</p><p>在前端开发中，像素要分两种情况讨论，css 像素和物理像素。</p><ul><li>屏幕的小点属于物理像素。</li><li>编写网页时写的 width 和 height 是 css 像素</li><li>浏览器编写网页时，需要将 css 像素转换成物理像素再呈现。</li><li>1 个 css 像素最终由几个物理像素显示由浏览器决定</li><li>默认情况下，在 PC 端，1 个 css 像素=1 个物理像素。</li><li>视口（viewport）就是屏幕中显示网页的区域，position：fixed 就是根据视口定位</li><li>可以通过查看视口的大小来观察 css 像素和物理像素的比值。</li></ul><h2 id="百分比" tabindex="-1"><a class="header-anchor" href="#百分比" aria-hidden="true">#</a> 百分比 %</h2><p>% 百分比也是一个相对单位，不同属性的百分比相对的参照值不一样。</p><ol><li>对于普通定位元素就是我们理解的父元素</li><li>font-size 相对于父元素的 font-size 来计算，如果父元素（以及它的祖先元素）未显式设置<code>font-size</code>值的话，将会以浏览器的默认值<code>16px</code>为基准。</li><li><code>line-height</code>取值为<code>%</code>时，它的计算方式是基于元素自身的<code>font-size</code>的值来计算。如果元素自身未显式设置<code>font-size</code>，则会基于元素继承过来的<code>font-size</code>的值计算</li></ol><h2 id="em" tabindex="-1"><a class="header-anchor" href="#em" aria-hidden="true">#</a> em</h2><p>em 是相对于父元素的字体大小来计算的，具有继承的特点。如果自身定义了 font-size 按自身来计算（浏览器默认字体是 16px），整个页面内 1em 不是一个固定的值。</p><ul><li>1em = 1font-size</li><li>em 会根据字体的大小改变而改变</li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.container</span> <span class="token punctuation">{</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.box</span> <span class="token punctuation">{</span>
  <span class="token comment">/* font-size: 20px; */</span>
  <span class="token comment">/* 如果自己没有设置, 那么会继承父元素的font-size */</span>

  <span class="token comment">/* 
      如果font-size中有写em单位, 可以理解成相对于父元素
      但是更准确的理解依然是相对于自己的
       */</span>
  <span class="token comment">/* font-size: 1em; */</span>

  <span class="token comment">/* 1.em: 相对自己的font-size */</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 10em<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 5em<span class="token punctuation">;</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> orange<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="rem" tabindex="-1"><a class="header-anchor" href="#rem" aria-hidden="true">#</a> rem</h2><p>rem 是相对于根元素的字体大小来计算的</p><ul><li>1rem = html 根元素的 1 font-size</li></ul><h2 id="vw" tabindex="-1"><a class="header-anchor" href="#vw" aria-hidden="true">#</a> vw</h2><p>viewpoint width 的缩写，视窗宽度，1vw 等于视窗宽度的 1%</p><p>浏览器宽度 1200px, 1 vw = 1200px/100 = 12 px。</p><h2 id="vh" tabindex="-1"><a class="header-anchor" href="#vh" aria-hidden="true">#</a> vh</h2><p>viewpoint height 的缩写，视窗高度，1vh 等于视窗高度的 1%。</p><p>浏览器高度 900px, 1 vh = 900px/100 = 9 px。</p><h2 id="vm" tabindex="-1"><a class="header-anchor" href="#vm" aria-hidden="true">#</a> vm</h2><p>相对于视口的宽度或高度中较小的那个。其中最小的那个被均分为 100 单位的 vm</p><p>浏览器高度 900px，宽度 1200px，取最小的浏览器高度， 1 vm = 900px/100 = 9 px。</p><p>但是 vm 的兼容性较差，使用较少</p>`,27),c=[t];function l(p,o){return e(),s("div",null,c)}const r=n(i,[["render",l],["__file","02_unit.html.vue"]]);export{r as default};
