import{_ as e,o,c as d,f as c}from"./app-06f72143.js";const t={},l=c('<h1 id="vue3-生命周期" tabindex="-1"><a class="header-anchor" href="#vue3-生命周期" aria-hidden="true">#</a> vue3 生命周期</h1><p>vue2 的生命周期</p><ul><li>beforeCreate</li><li>created</li><li>beforeMount</li><li>mounted</li><li>beforeUpdate</li><li>updated</li><li>beforeDestroy</li><li>destroyed</li></ul><p>Vue3.0 中可以继续使用 Vue2.x 中的生命周期钩子，但有两个被更名：</p><ul><li><code>beforeDestroy</code>改名为 <code>beforeUnmount</code></li><li><code>destroyed</code>改名为 <code>unmounted</code></li></ul><p>Vue3.0 也提供了 Composition API 形式的生命周期钩子，与 Vue2.x 中钩子对应关系如下：</p><ul><li><code>beforeCreate</code>===&gt;<code>setup()</code></li><li><code>created</code>=======&gt;<code>setup()</code></li><li><code>beforeMount</code> ===&gt;<code>onBeforeMount</code></li><li><code>mounted</code>=======&gt;<code>onMounted</code></li><li><code>beforeUpdate</code>===&gt;<code>onBeforeUpdate</code></li><li><code>updated</code> =======&gt;<code>onUpdated</code></li><li><code>beforeUnmount</code> ==&gt;<code>onBeforeUnmount</code></li><li><code>unmounted</code> =====&gt;<code>onUnmounted</code></li></ul>',7),i=[l];function n(u,r){return o(),d("div",null,i)}const f=e(t,[["render",n],["__file","05_vue3_life_cycle.html.vue"]]);export{f as default};
