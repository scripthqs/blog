import{_ as e,r as p,o,c,b as n,d as t,e as s,f as i}from"./app-06f72143.js";const l={},u=n("h1",{id:"xhr-基础",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#xhr-基础","aria-hidden":"true"},"#"),s(" XHR 基础")],-1),r=n("h2",{id:"xhr-简介",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#xhr-简介","aria-hidden":"true"},"#"),s(" XHR 简介")],-1),d=n("ol",null,[n("li",null,[s("使用"),n("code",null,"XMLHttpRequest"),s(" (XHR)对象可以与服务器交互, 也就是发送 ajax 请求")]),n("li",null,"前端可以获取到数据，而无需让整个的页面刷新。"),n("li",null,"这使得 Web 页面可以只更新页面的局部，而不影响用户的操作。")],-1),k={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest/XMLHttpRequest",target:"_blank",rel:"noopener noreferrer"},v=n("code",null,"XMLHttpRequest()",-1),m=n("p",null,[s("该构造函数用于初始化一个 "),n("code",null,"XMLHttpRequest"),s(" 实例对象，AJAX 的所有操作都是通过该对象进行的")],-1),h={href:"https://httpbin.org/#/",target:"_blank",rel:"noopener noreferrer"},b=i(`<h2 id="xhr-使用步骤" tabindex="-1"><a class="header-anchor" href="#xhr-使用步骤" aria-hidden="true">#</a> XHR 使用步骤</h2><ol><li>创建网络请求的 ajax 对象，使用 XMLHttpRequest</li><li>通过 open 方法配置网络请求</li><li>发送 send 请求</li><li>监听 XMLHttpRequest 对象状态的变化，或者监听 onload 事件</li></ol><h3 id="创建-xmlhttprequest-对象" tabindex="-1"><a class="header-anchor" href="#创建-xmlhttprequest-对象" aria-hidden="true">#</a> 创建 XMLHttpRequest 对象</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="设置请求信息-请求方法和-url" tabindex="-1"><a class="header-anchor" href="#设置请求信息-请求方法和-url" aria-hidden="true">#</a> 设置请求信息（请求方法和 url）</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 请求方式</span>
xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> url<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//可以设置请求头，一般不设置</span>
xhr<span class="token punctuation">.</span><span class="token function">setRequestHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;application/x-www-form-urlencoded&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="发送请求" tabindex="-1"><a class="header-anchor" href="#发送请求" aria-hidden="true">#</a> 发送请求</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//get请求不传 body 参数，只有post请求使用</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="接收响应" tabindex="-1"><a class="header-anchor" href="#接收响应" aria-hidden="true">#</a> 接收响应</h3><p>事件绑定，处理服务端返回的结果</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//xhr.responseXML 接收 xml格式 的响应数据</span>
<span class="token comment">//xhr.responseText 接收 文本格式 的响应数据</span>
xhr<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// readyState 是 xhr对象中的属性, 表示状态 0 1 2 3 4</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readyState <span class="token operator">==</span> <span class="token number">4</span> <span class="token operator">&amp;&amp;</span> xhr<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> text <span class="token operator">=</span> xhr<span class="token punctuation">.</span>responseText<span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// if (xhr.readyState !== XMLHttpRequest.DONE) return;</span>
    <span class="token comment">// // 将字符串转成JSON对象(js对象)</span>
    <span class="token comment">// const resJSON = JSON.parse(xhr.response);</span>
    <span class="token comment">// console.log(resJSON);</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>除了 onreadystatechange 还有其他事件可以监听</p><ul><li>loadstart：请求开始</li><li>progress： 一个响应数据包到达，此时整个 response body 都在 response 中</li><li>abort：调用 xhr.abort() 取消了请求</li><li>error：发生连接错误，例如，域错误。不会发生诸如 404 这类的 HTTP 错误。</li><li>load：请求成功完成</li><li>timeout：由于请求超时而取消了该请求（仅发生在设置了 timeout 的情况下）</li><li>loadend：在 load，error，timeout 或 abort 之后触发</li></ul><h2 id="响应数据和响应类型" tabindex="-1"><a class="header-anchor" href="#响应数据和响应类型" aria-hidden="true">#</a> 响应数据和响应类型</h2><p>发送请求后，对应的结果是 response 属性，返回的类型取决于 responseType 的属性设置，如果将 responseType 的值设置为空字符串，则会使用 text 作为默认值，目前服务器基本返回的都是 json 数据，直接设置为 json 即可。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>xhr<span class="token punctuation">.</span>responseType <span class="token operator">=</span> <span class="token string">&quot;json&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="响应状态-status" tabindex="-1"><a class="header-anchor" href="#响应状态-status" aria-hidden="true">#</a> 响应状态 status</h2><p>可以通过 status 和 statusText 来获取，status 返回响应状态码</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>xhr<span class="token punctuation">.</span>status<span class="token punctuation">;</span>
xhr<span class="token punctuation">.</span>statusText<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="get-post-参数传递" tabindex="-1"><a class="header-anchor" href="#get-post-参数传递" aria-hidden="true">#</a> get/post 参数传递</h2><p>常见传递给服务器数据方式：</p><ul><li>get 请求的 query 参数</li><li>post 请求 x-www-form-urlencoded 格式</li><li>post 请求 formData 格式</li><li>post 请求 JSON 格式</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>sendBtn<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 创建xhr对象</span>
  <span class="token keyword">const</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 监听数据响应</span>
  xhr<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token comment">// 配置请求</span>
  xhr<span class="token punctuation">.</span>responseType <span class="token operator">=</span> <span class="token string">&quot;json&quot;</span><span class="token punctuation">;</span>

  <span class="token comment">// 1.传递参数方式一: get -&gt; query</span>
  <span class="token comment">// xhr.open(&quot;get&quot;, &quot;http://xxx/get?name=aaa&amp;age=18&amp;address=China&quot;)</span>

  <span class="token comment">// 2.传递参数方式二: post -&gt; urlencoded</span>
  <span class="token comment">// xhr.open(&quot;post&quot;, &quot;http://xxx/posturl&quot;)</span>
  <span class="token comment">// // 发送请求(请求体body)</span>
  <span class="token comment">// xhr.setRequestHeader(&quot;Content-type&quot;, &quot;application/x-www-form-urlencoded&quot;)</span>
  <span class="token comment">// xhr.send(&quot;name=aaa&amp;age=18&amp;address=China&quot;)</span>

  <span class="token comment">// 3.传递参数方式三: post -&gt; formdata</span>
  <span class="token comment">// xhr.open(&quot;post&quot;, &quot;http://xxx/postform&quot;)</span>
  <span class="token comment">// // formElement对象转成FormData对象</span>
  <span class="token comment">// const formData = new FormData(formEl)</span>
  <span class="token comment">// xhr.send(formData)</span>

  <span class="token comment">// 4.传递参数方式四: post -&gt; json</span>
  xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&quot;post&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;http://xxx/postjson&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  xhr<span class="token punctuation">.</span><span class="token function">setRequestHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Content-type&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;application/json&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;aaa&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">&quot;China&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="取消请求和超时时间" tabindex="-1"><a class="header-anchor" href="#取消请求和超时时间" aria-hidden="true">#</a> 取消请求和超时时间</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

xhr<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
xhr<span class="token punctuation">.</span><span class="token function-variable function">onabort</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;请求被取消掉了&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

xhr<span class="token punctuation">.</span>responseType <span class="token operator">=</span> <span class="token string">&quot;json&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// timeout: 浏览器达到过期时间还没有获取到对应的结果时, 取消本次请求</span>

<span class="token comment">// 超时设置 （2秒）</span>
xhr<span class="token punctuation">.</span>timeout <span class="token operator">=</span> <span class="token number">2000</span><span class="token punctuation">;</span>
<span class="token comment">// 超时回调</span>
xhr<span class="token punctuation">.</span><span class="token function-variable function">ontimeout</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;网络超时，请稍后重试&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// 网络异常回调</span>
xhr<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;网络异常，请稍后重试&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&quot;get&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;http://xxx/timeout&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 手动取消结果</span>
<span class="token keyword">const</span> cancelBtn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
cancelBtn<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  xhr<span class="token punctuation">.</span><span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,25);function x(g,f){const a=p("ExternalLinkIcon");return o(),c("div",null,[u,r,d,n("p",null,[n("a",k,[v,t(a)])]),m,n("blockquote",null,[n("p",null,[s("接口测试网站"),n("a",h,[s("https://httpbin.org/#/"),t(a)])])]),b])}const y=e(l,[["render",x],["__file","04_create_ajax.html.vue"]]);export{y as default};
