import{_ as e,o as a,c as s,f as n}from"./app-10c4e004.js";const t={},o=n(`<h1 id="vscode-插件" tabindex="-1"><a class="header-anchor" href="#vscode-插件" aria-hidden="true">#</a> VSCode 插件</h1><h2 id="中文插件" tabindex="-1"><a class="header-anchor" href="#中文插件" aria-hidden="true">#</a> 中文插件</h2><p>Chinese (Simplified) (简体中文) Language Pack for Visual Studio Code</p><h2 id="code-spell-checker" tabindex="-1"><a class="header-anchor" href="#code-spell-checker" aria-hidden="true">#</a> Code Spell Checker</h2><p>检查拼写插件</p><h2 id="vscode-great-icons" tabindex="-1"><a class="header-anchor" href="#vscode-great-icons" aria-hidden="true">#</a> VSCode Great Icons</h2><p>文件夹图标插件</p><h2 id="prettier-代码格式化插件" tabindex="-1"><a class="header-anchor" href="#prettier-代码格式化插件" aria-hidden="true">#</a> prettier 代码格式化插件</h2><p>prettier 的 setting.json 配置文件</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>  <span class="token property">&quot;prettier.printWidth&quot;</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token comment">// 超过最大值换行</span>
  <span class="token property">&quot;prettier.tabWidth&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 缩进字节数</span>
  <span class="token comment">// &quot;prettier.useTabs&quot;: false, // 缩进不使用tab，使用空格</span>
  <span class="token comment">// &quot;prettier.semi&quot;: true, // 句尾添加分号</span>
  <span class="token property">&quot;prettier.singleQuote&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 使用单引号代替双引号</span>
  <span class="token property">&quot;prettier.trailingComma&quot;</span><span class="token operator">:</span> <span class="token string">&quot;none&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 在对象或数组最后一个元素后面是否加逗号，不加</span>
  <span class="token property">&quot;prettier.arrowParens&quot;</span><span class="token operator">:</span> <span class="token string">&quot;avoid&quot;</span><span class="token punctuation">,</span> <span class="token comment">// prettier- (x) =&gt; {} 箭头函数参数只有一个时是否要有小括号。avoid：省略括号</span>
  <span class="token property">&quot;prettier.bracketSpacing&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//  prettier-在对象，数组括号与文字之间加空格 &quot;{ foo: bar }&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="codesnap" tabindex="-1"><a class="header-anchor" href="#codesnap" aria-hidden="true">#</a> CodeSnap</h2><p>代码截图插件</p><h2 id="error-lens" tabindex="-1"><a class="header-anchor" href="#error-lens" aria-hidden="true">#</a> Error Lens</h2><p>报错插件</p>`,14),r=[o];function p(c,i){return a(),s("div",null,r)}const l=e(t,[["render",p],["__file","02vsc.html.vue"]]);export{l as default};
