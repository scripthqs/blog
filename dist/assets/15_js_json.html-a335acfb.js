import{_ as i,o as l,c as e,f as a}from"./app-c6441670.js";const n={},o=a('<h1 id="json" tabindex="-1"><a class="header-anchor" href="#json" aria-hidden="true">#</a> JSON</h1><h2 id="json-简介" tabindex="-1"><a class="header-anchor" href="#json-简介" aria-hidden="true">#</a> json 简介</h2><p>JSON(JavaScript Object Notation)JS 对象表示法。</p><ul><li>JS 中的对象只有 JS 自己认识，其他语言不认识。</li><li>JSON 就是一个特殊格式的字符串，这个字符串可以被任意语言所识别。</li><li>并且可以转换为任意语言中的对象。</li><li>JSON 在开发中主要用来数据的交互。</li><li>JSON 和对象的格式一样，不过 JSON 字符串中的属性名必须加双引号。</li></ul><h2 id="json-分类" tabindex="-1"><a class="header-anchor" href="#json-分类" aria-hidden="true">#</a> json 分类</h2><ul><li>对象{}，不能使函数对象</li><li>数组[]</li></ul><p>JSON 中允许的值：</p><ul><li>字符串</li><li>数值</li><li>布尔值</li><li>null</li><li>对象</li><li>数组</li></ul><h2 id="json-转换" tabindex="-1"><a class="header-anchor" href="#json-转换" aria-hidden="true">#</a> json 转换</h2><p>将 JSON 字符串转换成 JS 中的对象</p><ul><li>在 JS 中提供了一个工具类，叫做 JSON。</li><li>这个对象可以将 JSON 和 JS 对象相互转换。</li><li><code>JSON.parse()</code><ul><li>可以将 JSON 字符串转换成 JS 对象。</li><li>需要一个 JSON 字符串作为参数，会将该 JSON 字符串装换成对象。</li></ul></li><li><code>JSON.stringify()</code><ul><li>可以将一个 JS 对象转换成 JSON 字符串。</li><li>需要一个 JS 对象作为参数，会返回一个 JSON 字符串。</li></ul></li></ul>',11),s=[o];function r(t,c){return l(),e("div",null,s)}const h=i(n,[["render",r],["__file","15_js_json.html.vue"]]);export{h as default};
